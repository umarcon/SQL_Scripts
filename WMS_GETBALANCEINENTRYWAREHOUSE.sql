USE [Westcon]
GO

/****** Object:  StoredProcedure [Starsoft].[WMS_GetBalanceInEntryWarehouse]    Script Date: 21/09/2015 16:47:56 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




-- EXEC [Starsoft].[WMS_GetBalanceInEntryWarehouse] 1,'wrop',''
          
CREATE PROCEDURE [Starsoft].[WMS_GetBalanceInEntryWarehouse]
	 @ERP INT, --CodERP vindo da Intranet de(1 = Brasil, 2 = Cala, 3 = Mexico)
     @PLC_CIA varchar(20), -- Filial que deseja puxar o saldo
	 @PLC_PartNumberCode varchar(20) -- Código do item de estoque
	
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @ROWIDPART varchar(40)
	DECLARE @ROWIDSEP INT
	DECLARE @QTD_FAT_EMABERTO INT
	DECLARE @UKEY_PARTNUMBER AS VARCHAR(20)
	DECLARE @UKEY_LOCAL AS VARCHAR(20)
	DECLARE @UKEY_CAPAPO AS CHAR(20)
	DECLARE @UKEY_ITEMPO AS CHAR(20)
	DECLARE @LAST_UKEY_ITEMPO AS CHAR(20)
	DECLARE @QTD_SEPSALDO AS INT

	IF @ERP = 1
	BEGIN
		-- PARTNUMBERS QUE ESTÃO COM SALDO NOS LOCAIS DE ENTRADA
		SELECT 
			ROW_NUMBER() OVER(ORDER BY WMS.D04_UKEY) AS Rowid, WMS.D04_UKEY AS UKEY_PARTNUMBER, D07.UKEY AS UKEY_LOCAL, SALDO_FISICO
		INTO #TMP_PARTNUMBER
		FROM WESTCON.STARSOFT.WMS_SALDONOLOCALDEENTRADA WMS (Nolock)
		JOIN STARWESTCON.DBO.D07 D07 (NOLOCK) ON WMS.D07_UKEY = D07.UKEY
		JOIN STARWESTCON.DBO.D04 D04 (NOLOCK) ON WMS.D04_UKEY = D04.UKEY
		WHERE	D07.D07_500_n = 1 AND ( ( (ISNULL(@PLC_PartNumberCode,'') = '') AND SALDO_FISICO > 0 ) OR (D04.D04_001_C = RTRIM(@PLC_PartNumberCode)) ) AND 
		WMS.FILIAL LIKE @PLC_CIA+'%'
		GROUP BY WMS.D04_UKEY, D07.UKEY, SALDO_FISICO

		-- Get first row
		SELECT @ROWIDPART = MIN(rowid)
		FROM #TMP_PARTNUMBER	
		
		WHILE @ROWIDPART IS NOT NULL
		BEGIN
			SELECT @UKEY_PARTNUMBER = UKEY_PARTNUMBER, @UKEY_LOCAL = UKEY_LOCAL FROM #TMP_PARTNUMBER WHERE ROWID = @ROWIDPART

			SELECT CASE WHEN E11.E11_PAR = 'U06' THEN U05.U05_001_C ELSE E08.E08_001_C END AS PO, E10.E10_001_C, E10.E10_003_D, E11.E11_003_B, E11.D07_UKEY, E11.D07_UKEY0, E11.D04_UKEY
			INTO #TMP_INVOICE
			FROM STARWESTCON.DBO.E10 (NOLOCK)
			INNER JOIN STARWESTCON.DBO.E11 (NOLOCK) ON E11.E10_UKEY = E10.UKEY
			INNER JOIN (SELECT CASE WHEN E11T.E11_PAR = 'U06' THEN U06.UKEY ELSE E09.UKEY END UKEY, U06.U05_UKEY, E09.E08_UKEY
						FROM STARWESTCON.DBO.E11 E11T (NOLOCK)
						LEFT JOIN STARWESTCON.DBO.U06 (NOLOCK) ON E11T.E11_UKEYP = U06.UKEY
						LEFT JOIN STARWESTCON.DBO.E09 (NOLOCK) ON E11T.E11_UKEYP = E09.UKEY)TMP ON TMP.UKEY = E11.E11_UKEYP
			LEFT JOIN STARWESTCON.DBO.U05 (NOLOCK) ON TMP.U05_UKEY = U05.UKEY
			LEFT JOIN STARWESTCON.DBO.E08 (NOLOCK) ON TMP.E08_UKEY = E08.UKEY
			WHERE E11.D04_UKEY = @UKEY_PARTNUMBER AND E11.D07_UKEY0 = @UKEY_LOCAL
			
			
			-- BUSCO AS POs E LOCAIS QUE FORAM UTILIZADOS PELO PARTNUMBER
			SELECT ROW_NUMBER() OVER(ORDER BY WMSM_ENT.D04_UKEY) AS Rowid, WMSM_ENT.D04_UKEY AS UKEY_PARTNUMBER, WMSM_ENT.WMSM_001_C AS PO, WMSM_ENT.D07_UKEYO AS UKEY_LOCAL, WMSM_ENT.WMSM_002_B AS SALDO
			INTO #TMP_SEPARACAO
			FROM STARWESTCON.DBO.WMSM WMSM_ENT (NOLOCK)
			WHERE WMSM_ENT.D04_UKEY = @UKEY_PARTNUMBER AND WMSM_ENT.D07_UKEYO = @UKEY_LOCAL 
			GROUP BY WMSM_ENT.D04_UKEY, WMSM_ENT.D07_UKEYO, WMSM_ENT.WMSM_001_C, WMSM_ENT.WMSM_002_B 

			-- APAGO OS MOVIMENTOS QUE FORAM TOTALMENTE DEVOLVIDOS
			DELETE #TMP_SEPARACAO WHERE SALDO < 1

			-- APAGO AS NOTAS QUE TIVERAM MOVIMENTAÇÃO WMS SAINDO DO LOCAL DE ENTRADA
			DELETE #TMP_INVOICE WHERE PO IN (SELECT PO FROM #TMP_SEPARACAO)

			IF object_id('tempdb..#TMP_RESULTADO') IS NOT NULL
				INSERT INTO #TMP_RESULTADO SELECT * FROM #TMP_INVOICE LEFT JOIN #TMP_PARTNUMBER (NOLOCK) ON #TMP_PARTNUMBER.UKEY_PARTNUMBER = #TMP_INVOICE.D04_UKEY
			ELSE
				SELECT * INTO #TMP_RESULTADO FROM #TMP_INVOICE LEFT JOIN #TMP_PARTNUMBER (NOLOCK) ON #TMP_PARTNUMBER.UKEY_PARTNUMBER = #TMP_INVOICE.D04_UKEY
		
			DROP TABLE #TMP_SEPARACAO
			DROP TABLE #TMP_INVOICE

			-- Get next row id
			SELECT @ROWIDPART = MIN(rowid)
			FROM #TMP_PARTNUMBER
			WHERE rowid > @ROWIDPART
		END

		IF object_id('tempdb..#TMP_RESULTADO') IS NOT NULL
		BEGIN
			-- RETORNO OS PARTNUMBERS QUE POSSUEM SALDO INFORMANDO PO E OV
			SELECT	'' AS UKEY,
					ISNULL(#TMP_RESULTADO.PO,'Não possui') PO ,
					ISNULL(#TMP_RESULTADO.E10_001_C,'Não achou') AS NF,
					RTRIM(D04.D04_001_C) AS CODIGO, 
					'' AS OBS,   
					RTRIM(D07.D07_001_C) AS LOCAL,  
					isnull(#TMP_RESULTADO.E11_003_B,0) AS SALDO,
					D07.D07_502_N NAO_DISPONIVEL,
					'6' AS ORDEM,	
					D07.D07_500_N ENTRADA,
					D07.D07_501_N SAIDA,
					(SELECT TOP 1 CIA_UKEY_WMS FROM STARWESTCON.DBO.D07 (NOLOCK) SUBQUERY WHERE SUBQUERY.UKEY = D07.D07_UKEY) AS CIA_UKEY_WMS,
					RTRIM(D07.D07_002_C) AS NOME,
					( SELECT SALDO_FISICO FROM #TMP_PARTNUMBER WHERE #TMP_PARTNUMBER.UKEY_PARTNUMBER = D04.UKEY AND #TMP_PARTNUMBER.UKEY_LOCAL = D07.UKEY) AS SALDO_FISICO,
					isnull(( SELECT SUM(E11_003_B) FROM #TMP_RESULTADO WHERE #TMP_RESULTADO.D04_UKEY = D04.UKEY AND #TMP_RESULTADO.D07_UKEY0 = D07.UKEY),0) AS SALDO_TOTAL_WMS
			FROM #TMP_PARTNUMBER
				left join #TMP_RESULTADO on #TMP_PARTNUMBER.UKEY_PARTNUMBER = #TMP_RESULTADO.UKEY_PARTNUMBER
				LEFT JOIN STARWESTCON.DBO.D07 D07 (NOLOCK) ON D07.UKEY = #TMP_PARTNUMBER.UKEY_LOCAL
				LEFT JOIN STARWESTCON.DBO.D04 D04 (NOLOCK) ON D04.UKEY = #TMP_PARTNUMBER.UKEY_PARTNUMBER
			WHERE 
				( (ISNULL(@PLC_PartNumberCode,'') = '') OR (D04.D04_001_C = @PLC_PartNumberCode) )
			ORDER BY
				D04.D04_001_C, D07.D07_001_C, #TMP_RESULTADO.PO
		
			DROP TABLE #TMP_RESULTADO
		END
		DROP TABLE #TMP_PARTNUMBER
	END

	IF @ERP = 2
	BEGIN
		-- PARTNUMBERS QUE ESTÃO COM SALDO NOS LOCAIS DE ENTRADA
		SELECT 
			ROW_NUMBER() OVER(ORDER BY WMS.D04_UKEY) AS Rowid, WMS.D04_UKEY AS UKEY_PARTNUMBER, D07.UKEY AS UKEY_LOCAL, SALDO_FISICO
		INTO #TMP_PARTNUMBERMX
		FROM WESTCON.STARSOFT.WMS_SALDONOLOCALDEENTRADAMX WMS (Nolock)
		JOIN STARWESTCONMX.DBO.D07 D07 (NOLOCK) ON WMS.D07_UKEY = D07.UKEY
		JOIN STARWESTCONMX.DBO.D04 D04 (NOLOCK) ON WMS.D04_UKEY = D04.UKEY
		WHERE	D07.D07_500_n = 1 AND ( ( (ISNULL(@PLC_PartNumberCode,'') = '') AND SALDO_FISICO > 0 ) OR (D04.D04_001_C = RTRIM(@PLC_PartNumberCode)) ) AND 
		WMS.FILIAL LIKE @PLC_CIA+'%'
		GROUP BY WMS.D04_UKEY, D07.UKEY, SALDO_FISICO

		-- Get first row
		SELECT @ROWIDPART = MIN(rowid)
		FROM #TMP_PARTNUMBERMX	
		
		WHILE @ROWIDPART IS NOT NULL
		BEGIN
			SELECT @UKEY_PARTNUMBER = UKEY_PARTNUMBER, @UKEY_LOCAL = UKEY_LOCAL FROM #TMP_PARTNUMBERMX WHERE ROWID = @ROWIDPART

			SELECT CASE WHEN E11.E11_PAR = 'U06' THEN U05.U05_001_C ELSE E08.E08_001_C END AS PO, E10.E10_001_C, E10.E10_003_D, E11.E11_003_B, E11.D07_UKEY, E11.D07_UKEY0, E11.D04_UKEY
			INTO #TMP_INVOICEMX
			FROM STARWESTCON.DBO.E10 (NOLOCK)
			INNER JOIN STARWESTCONMX.DBO.E11 (NOLOCK) ON E11.E10_UKEY = E10.UKEY
			INNER JOIN (SELECT CASE WHEN E11T.E11_PAR = 'U06' THEN U06.UKEY ELSE E09.UKEY END UKEY, U06.U05_UKEY, E09.E08_UKEY
						FROM STARWESTCONMX.DBO.E11 E11T (NOLOCK)
						LEFT JOIN STARWESTCONMX.DBO.U06 (NOLOCK) ON E11T.E11_UKEYP = U06.UKEY
						LEFT JOIN STARWESTCONMX.DBO.E09 (NOLOCK) ON E11T.E11_UKEYP = E09.UKEY)TMP ON TMP.UKEY = E11.E11_UKEYP
			LEFT JOIN STARWESTCONMX.DBO.U05 (NOLOCK) ON TMP.U05_UKEY = U05.UKEY
			LEFT JOIN STARWESTCONMX.DBO.E08 (NOLOCK) ON TMP.E08_UKEY = E08.UKEY
			WHERE E11.D04_UKEY = @UKEY_PARTNUMBER AND E11.D07_UKEY0 = @UKEY_LOCAL
			
			
			-- BUSCO AS POs E LOCAIS QUE FORAM UTILIZADOS PELO PARTNUMBER
			SELECT ROW_NUMBER() OVER(ORDER BY WMSM_ENT.D04_UKEY) AS Rowid, WMSM_ENT.D04_UKEY AS UKEY_PARTNUMBER, WMSM_ENT.WMSM_001_C AS PO, WMSM_ENT.D07_UKEYO AS UKEY_LOCAL, WMSM_ENT.WMSM_002_B AS SALDO
			INTO #TMP_SEPARACAOMX
			FROM STARWESTCONMX.DBO.WMSM WMSM_ENT (NOLOCK)
			WHERE WMSM_ENT.D04_UKEY = @UKEY_PARTNUMBER AND WMSM_ENT.D07_UKEYO = @UKEY_LOCAL 
			GROUP BY WMSM_ENT.D04_UKEY, WMSM_ENT.D07_UKEYO, WMSM_ENT.WMSM_001_C, WMSM_ENT.WMSM_002_B 

			-- APAGO OS MOVIMENTOS QUE FORAM TOTALMENTE DEVOLVIDOS
			DELETE #TMP_SEPARACAOMX WHERE SALDO < 1

			-- APAGO AS NOTAS QUE TIVERAM MOVIMENTAÇÃO WMS SAINDO DO LOCAL DE ENTRADA
			DELETE #TMP_INVOICEMX WHERE PO IN (SELECT PO FROM #TMP_SEPARACAOMX)

			IF object_id('tempdb..#TMP_RESULTADOMX') IS NOT NULL
				INSERT INTO #TMP_RESULTADOMX SELECT * FROM #TMP_INVOICEMX LEFT JOIN #TMP_PARTNUMBERMX (NOLOCK) ON #TMP_PARTNUMBERMX.UKEY_PARTNUMBER = #TMP_INVOICEMX.D04_UKEY
			ELSE
				SELECT * INTO #TMP_RESULTADOMX FROM #TMP_INVOICEMX LEFT JOIN #TMP_PARTNUMBERMX (NOLOCK) ON #TMP_PARTNUMBERMX.UKEY_PARTNUMBER = #TMP_INVOICEMX.D04_UKEY
		
			DROP TABLE #TMP_SEPARACAOMX
			DROP TABLE #TMP_INVOICEMX

			-- Get next row id
			SELECT @ROWIDPART = MIN(rowid)
			FROM #TMP_PARTNUMBERMX
			WHERE rowid > @ROWIDPART
		END

		IF object_id('tempdb..#TMP_RESULTADOMX') IS NOT NULL
		BEGIN
			-- RETORNO OS PARTNUMBERS QUE POSSUEM SALDO INFORMANDO PO E OV
			SELECT	'' AS UKEY,
					ISNULL(#TMP_RESULTADOMX.PO,'Não possui') PO ,
					ISNULL(#TMP_RESULTADOMX.E10_001_C,'Não achou') AS NF,
					RTRIM(D04.D04_001_C) AS CODIGO, 
					'' AS OBS,   
					RTRIM(D07.D07_001_C) AS LOCAL,  
					isnull(#TMP_RESULTADOMX.E11_003_B,0) AS SALDO,
					D07.D07_502_N NAO_DISPONIVEL,
					'6' AS ORDEM,	
					D07.D07_500_N ENTRADA,
					D07.D07_501_N SAIDA,
					(SELECT TOP 1 CIA_UKEY_WMS FROM STARWESTCON.DBO.D07 (NOLOCK) SUBQUERY WHERE SUBQUERY.UKEY = D07.D07_UKEY) AS CIA_UKEY_WMS,
					RTRIM(D07.D07_002_C) AS NOME,
					( SELECT SALDO_FISICO FROM #TMP_PARTNUMBERMX WHERE #TMP_PARTNUMBERMX.UKEY_PARTNUMBER = D04.UKEY AND #TMP_PARTNUMBERMX.UKEY_LOCAL = D07.UKEY) AS SALDO_FISICO,
					isnull(( SELECT SUM(E11_003_B) FROM #TMP_RESULTADOMX WHERE #TMP_RESULTADOMX.D04_UKEY = D04.UKEY AND #TMP_RESULTADOMX.D07_UKEY0 = D07.UKEY),0) AS SALDO_TOTAL_WMS
			FROM #TMP_PARTNUMBERMX
				left join #TMP_RESULTADOMX on #TMP_PARTNUMBERMX.UKEY_PARTNUMBER = #TMP_RESULTADOMX.UKEY_PARTNUMBER
				LEFT JOIN STARWESTCONMX.DBO.D07 D07 (NOLOCK) ON D07.UKEY = #TMP_PARTNUMBERMX.UKEY_LOCAL
				LEFT JOIN STARWESTCONMX.DBO.D04 D04 (NOLOCK) ON D04.UKEY = #TMP_PARTNUMBERMX.UKEY_PARTNUMBER
			WHERE 
				( (ISNULL(@PLC_PartNumberCode,'') = '') OR (D04.D04_001_C = @PLC_PartNumberCode) )
			ORDER BY
				D04.D04_001_C, D07.D07_001_C, #TMP_RESULTADOMX.PO
		
			DROP TABLE #TMP_RESULTADOMX
		END
		DROP TABLE #TMP_PARTNUMBERMX
	END
END

GO

